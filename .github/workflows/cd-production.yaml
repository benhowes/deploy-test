name: Release production
# Production already has a docker image which simply needs re-tagging.

on:
  push:
    tags: release.**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "benhowes/test-img"

jobs:

  tag-release-image:
    # Build a docker image for the current version
    runs-on: ubuntu-latest
    outputs:
      container-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta - new tag
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # The following pattern matches the calver section of the tag, e.g.
          # a tag `release.2022.09.1` -> `2022.09.1`
          tags: type=match,pattern=release.(\d+.\d+.\d+),group=1
          flavor: |
            latest=false

      - name: Tag release version
        # TODO: create an internal version of this
        uses: koraykoska/retag-docker-image@0.2.4
        with:
          registry: ${{ env.REGISTRY }}
          name: ${{ env.IMAGE_NAME }}
          # old tag is the commit hash - set in the cd-staging container build
          old_tag: ${{ github.sha }}
          new_tag: ${{ steps.meta.outputs.version }}
          username: github
          password: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    needs: [tag-release-image]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to aptible staging
        uses: aptible/aptible-deploy-action@v1
        with:
          username: ${{ secrets.APTIBLE_ROBOT_USERNAME }}
          password: ${{ secrets.APTIBLE_ROBOOT_PASSWORD }}
          app: ${{ secrets.APTIBLE_APP }}
          environment: ${{ secrets.APTIBLE_ENVIRONMENT }}
          docker_img: ${{ needs.tag-release-image.outputs.container-tag }}
          private_registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          private_registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
